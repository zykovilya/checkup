# nginx.conf  --  docker-openresty
#
# This file is installed to:
#   `/usr/local/openresty/nginx/conf/nginx.conf`
# and is the file loaded by nginx at startup,
# unless the user specifies otherwise.
#
# It tracks the upstream OpenResty's `nginx.conf`, but removes the `server`
# section and adds this directive:
#     `include /etc/nginx/conf.d/*.conf;`
#
# The `docker-openresty` file `nginx.vh.default.conf` is copied to
# `/etc/nginx/conf.d/default.conf`.  It contains the `server section
# of the upstream `nginx.conf`.
#
# See https://github.com/openresty/docker-openresty/blob/master/README.md#nginx-config-files
#

#user  nobody;
worker_processes  1;

env SMTP_SERVER;
env SMTP_PORT;
env SMTP_TO;
env SMTP_USER;
env SMTP_PASSWORD;
env SMTP_FROM;
env TMP_SERVER_URL;
env MSA_SERVER_URL;
env TMP_SERVER_EXTERNAL_URL;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;
error_log /dev/stdout notice;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;
    access_log /dev/stdout;

    # See Move default writable paths to a dedicated directory (#119)
    # https://github.com/openresty/docker-openresty/issues/119
    client_body_temp_path /var/run/openresty/nginx-client-body;
    proxy_temp_path       /var/run/openresty/nginx-proxy;
    #fastcgi_temp_path     /var/run/openresty/nginx-fastcgi;
    #uwsgi_temp_path       /var/run/openresty/nginx-uwsgi;
    #scgi_temp_path        /var/run/openresty/nginx-scgi;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip  on;

    proxy_cache_path /tmp/cache  levels=1:2 keys_zone=default_cache:15m;

    server {
                listen       80;
                underscores_in_headers on;
                default_type application/json;
                #resolver 8.8.8.8;
                resolver 127.0.0.11 ipv6=off;

                set_by_lua $tmp_server_external_url 'return os.getenv("TMP_SERVER_EXTERNAL_URL")';
                set_by_lua $msa_server_url 'return os.getenv("MSA_SERVER_URL")';
                #lua_code_cache off

                location @share_files {
                    access_log off;
                    root   /usr/share/nginx/html;
                    expires -1; # no cache
                    autoindex on;
                    autoindex_exact_size off;
                    autoindex_localtime on;
                    sub_filter '{{TMP_SERVER_URL}}' $tmp_server_external_url;
                    sub_filter '{{MSA_SERVER_URL}}' $msa_server_url;
                    sub_filter_types  application/json application/javascript;
                    sub_filter_once off;
                }


                location / {
                    try_files $uri @share_files;
                }

               # location /msa/api/products/ {
               #            content_by_lua_file /lua/products.lua;
               #            #content_by_lua_block {  }
               # }

                location /msa/api/labs {
                           proxy_cache default_cache;
                           content_by_lua_file /lua/labs.lua;
                }

                location /msa/api/labs/images {
                        try_files $uri @share_files;
                }


                location /msa/api/products/questions/success.html {
                       client_max_body_size 200k;
                       client_body_buffer_size 200k;

                       if ($request_method = POST ) {
                           content_by_lua_file /lua/questions.lua;
                       }
                }

                location /msa/api/analyses/order {
                       client_max_body_size 200k;
                       client_body_buffer_size 200k;
                       if ($request_method = POST ) {
                           content_by_lua_file /lua/lab_order.lua;
                       }

                }

                location ~/api/msa/clients/(?<personId>(.*))/orders/(?<productOrderId>(.*))/mobile/state$ {
                         client_max_body_size 200k;
                         client_body_buffer_size 200k;
                         content_by_lua_file /lua/state.lua;
                }



        }

    #include /etc/nginx/conf.d/*.conf;
}





